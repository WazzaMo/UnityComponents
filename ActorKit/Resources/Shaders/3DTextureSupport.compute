/*
 * 3DTextureSupport Unity Component
 * (c) Copyright 2017, 2018, Warwick Molloy
 * GitHub repo WazzaMo/UnityComponents
 * Provided under the terms of the MIT License.
 */

#define GROUP_SIZE	1

#include "3DTextureTypes.hlsl"

Buffer<SizeType>  Size;

uint indexFrom(uint3 pos)
{
	return Size[0].Width * (pos.y + Size[0].Height * pos.z) + pos.x;
}

//----------------------
#pragma kernel GetTextureF4Data

Texture3D<float4> InTextureF4;
RWBuffer<float4>  OutColors;

[numthreads(GROUP_SIZE,GROUP_SIZE,1)]
void GetTextureF4Data (uint3 id : SV_DispatchThreadID)
{
	OutColors[ indexFrom(id)] = InTextureF4[id];
}

//---------
#pragma kernel GetTextureF1Data

Texture3D<float>  InTextureF1;

[numthreads(GROUP_SIZE,GROUP_SIZE,1)]
void GetTextureF1Data (uint3 id : SV_DispatchThreadID)
{
	OutColors[ indexFrom(id)] = float4(InTextureF1[id],0,0,1);
}

//---------
#pragma kernel SetTextureF1Data

RWTexture3D<float> OutTexture1F;
Buffer<float4>     InColors;

[numthreads(1,1,1)]
void SetTextureF1Data(uint3 tID : SV_DISPATCHTHREADID)
{
	OutTexture1F[tID] = InColors[ indexFrom(tID) ].r;
}